# generated by datamodel-codegen:
#   filename:  aws-kms-key.json
#   timestamp: 2022-03-02T22:40:39+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional, Union

from pydantic import BaseModel, Extra, Field, conint, constr


class KeyUsage(Enum):
    ENCRYPT_DECRYPT = "ENCRYPT_DECRYPT"
    SIGN_VERIFY = "SIGN_VERIFY"


class KeySpec(Enum):
    SYMMETRIC_DEFAULT = "SYMMETRIC_DEFAULT"
    RSA_2048 = "RSA_2048"
    RSA_3072 = "RSA_3072"
    RSA_4096 = "RSA_4096"
    ECC_NIST_P256 = "ECC_NIST_P256"
    ECC_NIST_P384 = "ECC_NIST_P384"
    ECC_NIST_P521 = "ECC_NIST_P521"
    ECC_SECG_P256K1 = "ECC_SECG_P256K1"


class Tag(BaseModel):
    Key: str
    Value: str


class KmsKey(BaseModel):
    class Config:
        extra = Extra.forbid

    Description: Optional[str] = None
    Enabled: Optional[bool]
    EnableKeyRotation: Optional[bool]
    KeyPolicy: Union[Dict[str, Any], str]
    KeyUsage: Optional[KeyUsage] = Field(
        "ENCRYPT_DECRYPT",
        description="Determines the cryptographic operations for which you can use the CMK. The default value is ENCRYPT_DECRYPT. This property is required only for asymmetric CMKs. You can't change the KeyUsage value after the CMK is created.",
    )
    KeySpec: Optional[KeySpec] = Field(
        "SYMMETRIC_DEFAULT",
        description="Specifies the type of CMK to create. The default value is SYMMETRIC_DEFAULT. This property is required only for asymmetric CMKs. You can't change the KeySpec value after the CMK is created.",
    )
    MultiRegion: Optional[bool] = Field(
        False,
        description="Specifies whether the CMK should be Multi-Region. You can't change the MultiRegion value after the CMK is created.",
    )
    PendingWindowInDays: Optional[int] = Field(
        None,
        description="Specifies the number of days in the waiting period before AWS KMS deletes a CMK that has been removed from a CloudFormation stack. Enter a value between 7 and 30 days. The default value is 30 days.",
    )
    Tags: Optional[List[Tag]] = Field(
        None, description="An array of key-value pairs to apply to this resource."
    )
    Arn: Optional[str]
    KeyId: str
